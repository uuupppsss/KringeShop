@inherits LayoutComponentBase
@using System.Security.Claims;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using KringeShopWebClient.Model;
@inject AuthenticationStateProvider authP;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Pickme Shop</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span aria-hidden="true"></span> Товары
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Account">
                <span aria-hidden="true"></span> Личный кабинет
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Basket">
                <span aria-hidden="true"></span> Корзина
            </NavLink>
        </div>
        
         @* <AuthorizeView Roles="admin">
            <Authorized>  *@

                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/AddProduct">
                            <span aria-hidden="true"></span> Добавить продукт
                        </NavLink>
                    </div>

                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/Orders">
                            <span aria-hidden="true"></span> Заказы
                        </NavLink>
                    </div>
            @*  </Authorized>
        </AuthorizeView>  *@
        </nav>
</div>
@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    private ClaimsPrincipal authUser;

    protected override Task OnInitializedAsync() => LoadData();

    private async Task LoadData()
    {
        var authState = await authP.GetAuthenticationStateAsync();

    }
}

