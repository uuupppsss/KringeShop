@page "/"

@rendermode InteractiveServer

@using KringeShopWebClient.Services
@using KringeShopLib.Model
@using Blazored.Toast

@inject NavigationManager nav;
@inject UserService userservice;
@inject Blazored.Toast.Services.IToastService ToastService

<PageTitle>Home</PageTitle>


<h3>Список товаров</h3>

<div>
    <div>
        <input type="text" @bind="filter" placeholder="Фильтр по названию..." />

        <button @onclick="FilterProducts">
            <i class="bi bi-search"></i>
        </button>
    </div>
</div>

<div class="product-list">
    @if (filteredProducts.Count == 0)
    {
        <h3>Ничего не нашлось</h3>
        <button @onclick="ShowToast">Не нажимай</button>
    }
    else
    {
        @foreach (var product in filteredProducts)
        {
            <div class="product-item">
                <img />
                <h4>@product.Name</h4>
                <p>Цена: @product.Price.ToString("C")</p>
                @if (userservice.CurrentUser != null)
                {
                    <button @onclick="() => AddToBasket(product)">Добавить в корзину</button>
                }
            </div>
        }
    }

</div>

@code {
    private string filter = string.Empty;
    private List<Product> products = new List<Product>();
    private List<Product> filteredProducts;

    private void ShowToast()
    {
        ToastService.ShowSuccess(":(");
    }

    protected override void OnInitialized()
    {

        products = GetProducts();
        filteredProducts = products;
    }

    private void FilterProducts()
    {
        if (string.IsNullOrWhiteSpace(filter))
        {
            filteredProducts = products;
        }
        else
        {
            filteredProducts = products.Where(p => p.Name.Contains(filter, StringComparison.OrdinalIgnoreCase)).ToList();
        }
    }

    private void AddToBasket(Product product)
    {

    }


    private List<Product> GetProducts()
    {
        // Здесь вернуть список товаров из источника данных
        return new List<Product>
        {
            new Product { Id = 1, Name = "Товар 1", Price = 100 },
            new Product { Id = 2, Name = "Товар 2", Price = 150 },
            new Product { Id = 3, Name = "Товар 3", Price = 200 },

        };
    }
}
