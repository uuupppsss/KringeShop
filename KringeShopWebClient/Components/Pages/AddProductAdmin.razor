@page "/AddProduct"
@rendermode InteractiveServer

@using KringeShopWebClient.Model
@using KringeShopLib.Model
@using System.Net.Http.Headers
@using KringeShopWebClient.Services
@using KringeShopWebClient.Extention

@inject AdminService adminService
@inject IJSRuntime js

<h3>Добавить продукт</h3>

<EditForm Model="@product" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Название:</label>
        <InputText @bind-Value="product.Name" />
    </div>
    <div>
        <label>Описание:</label>
        <InputTextArea @bind-Value="product.Description" />
    </div>
    <div>
        <label>Цена:</label>
        <InputNumber @bind-Value="product.Price" />
    </div>
    <div>
        <label>Количество:</label>
        <InputNumber @bind-Value="product.Count" />
    </div>
    <div>
        <label>Изображение:</label>
        <InputFile OnChange="HandleFileSelected" multiple accept=".jpg, .jpeg, .png" />

    </div>

    <button type="submit">Сохранить</button>
    <button @onclick="ShowPhoto">Показать картинку</button>
</EditForm>
@if (imageBase64 != null)
{
    <img src="@($"data:image/png;base64,{imageBase64}")" alt="Изображение" class="scaled-image" />
}

<style>
    .scaled-image {
        transform: scale(0.2); 
        transform-origin: top left; 
    }
</style>
@code {
    private ProductDTO product;
    private List<byte[]> productPhotos;
    private string? imageBase64;
    private ElementReference fileInput;

    protected override void OnInitialized()
    {
        product = new ProductDTO();
        base.OnInitialized();
    }

    // private async Task OpenFileDialog()
    // {
    //     await fileInput.FocusAsync(); // Фокусируемся на элементе input
    //     fileInput.Click(); // Открываем диалог выбора файлов
    // }

    private async Task ShowPhoto()
    {
        // byte[] imageData = product.Image; // массив байтов
        // imageBase64 = Convert.ToBase64String(imageData);
        // StateHasChanged();
    }

    private async Task HandleValidSubmit()
    {
        //отладка!!!
        product.TypeId = 1;
        await adminService.AddProduct(product, productPhotos);
    }

    private async void HandleFileSelected(InputFileChangeEventArgs e)
    {
        // var file = e.GetMultipleFiles(1).FirstOrDefault();
        // if (file != null)
        // {
        //     using var stream = file.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024); //  5 МБ
        //     using var memoryStream = new MemoryStream();
        //     await stream.CopyToAsync(memoryStream);
        //     string stringImg = Convert.ToBase64String(memoryStream.ToArray());
        //     product.Images = new List<string> { stringImg };
        // } // Сохранение изображения в виде массива байтов

        productPhotos = new();
        var files = e.GetMultipleFiles(5); // Получаем 5 картинок
        if (files != null && files.Count > 0)
        {
            foreach (var file in files)
            {
                using var stream = file.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024); // 5 МБ
                using var memoryStream = new MemoryStream();
                await stream.CopyToAsync(memoryStream);
                productPhotos.Add(memoryStream.ToArray());
            }
        }
    }
    private void HandleFilesSelected(ChangeEventArgs e)
    {
        throw new NotImplementedException();
    }
}


